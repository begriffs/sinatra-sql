             *** R U B Y  O N  T R A I L S ***
(This project is half trolling, half serious experiment.)

Would you rather be a lazy tourist on a train or a rugged woodsman?
Ruby on Trails is a small Sinatra-based web framework with the
following opinions:

* No DSL hell -- preserve the elegance of Ruby but ditch
  sophomoric domain specific trickery.

* Love your tools; don't hide them. Feeling strangled by ORMs that
  assume you need "help" using a relational database? Hit the Trails
  and work directly with the full power of PostgreSQL.

* Preserve good Rails patterns like versioned migrations.

* Keep relevant code close together. No need to hunt for the
  magical_helper_helper.

* Be declarative and test only things that actually need testing.
  Forget Ruby model validations, database constraints already have
  your back.

* Your little app doesn't really need the fancy shit. Your actual
  challenge is making something anyone cares about, not prematurely
  scaling it.

* Web development is not that hard. Seriously, just suck it up and
  handle situations as you encounter them. You'll reinvent the wheel
  a little, but it takes just as long to untangle a heavy framework.
